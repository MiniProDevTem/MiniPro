<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
		

<bean id="miniContext" class="com.minipro.controller.MiniContext"></bean>

		<context:property-placeholder location="classpath:redis.properties" />
<!-- 		<context:property-placeholder location="classpath:db.properties" />-->
 		 <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
	        <property name="maxIdle" value="${redis.maxIdle}"/>
	        <property name="maxActive" value="${redis.maxActive}"/>
 	        <property name="maxWait" value="${redis.maxWait}"/>
	        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    	</bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}" p:pool-config-ref="poolConfig"/>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"                                   
	p:connection-factory-ref="connectionFactory" />  

	
		
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
	        <property name="url" value="${mysql.url}" /> 
	       	<property name="driverClassName" value="${mysql.driver}" />   
	        <property name="username" value="${mysql.username}" />  
	        <property name="password" value="${mysql.password}" /> 
    	</bean>     	
    	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
	        <property name="dataSource" ref="dataSource" />  
	        <!-- 自动扫描mapping.xml文件 -->  
	        <property name="mapperLocations">
				<list>
					<value>classpath:mapper/*.xml</value>
				</list>
			</property>
			<property name="typeAliasesPackage"
				value=" com.minipro.entity, com.minipro.criteria,com.minipro.mapper"><!-- 将这几个类导入，以便可以在xml中访问 -->
			</property>
    	</bean>
		<!-- Mapper接口所在包名，Spring会自动查找其下的类 -->  
    	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	        <property name="basePackage" value="com.minipro.mapper" />  
	        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    	</bean>
		
		<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
		<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean> -->
    <mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/image/**" location="/image/" />
	
	<mvc:resources mapping="/js/**" location="/js/" />
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="" />
		<property name="suffix" value=".jsp" />
	</bean>
		<mvc:annotation-driven /><!--开启spring mvc 的自动注解  -->
		
		 <context:component-scan base-package="com.minipro" /><!--自动扫描通过@Service等注解标明的bean  -->
		
		<context:annotation-config /><!--启动基于注解的自动装配  -->
</beans>